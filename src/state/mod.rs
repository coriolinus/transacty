pub mod memory;

use crate::{primitives::Event, EventError};

/// A StateManager can update global state appropriately in response to events.
pub trait StateManager {
    /// This error type should cover all errors generated by the IO aspect of the
    /// state manager: connection issues to redis, etc.
    type Err;

    /// This function updates global state appropriately in response to
    fn handle_event(&mut self, event: Event) -> Result<(), EventError<Self::Err>>;
}
